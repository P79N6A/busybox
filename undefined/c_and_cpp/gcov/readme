这个例子展示了两种使用gcov的可能性：
1、一个文件的简单测试程序
2、一个目录的完整实用程序

对于简单测试程序来说，只需要使用“gcc -ftest-coverage -fprofile-arcs foo”生成可执行文件“.gcno文件”即可，
然后直接运行程序，会生成.gcda文件，使用gcov操作.gcda文件，生成.gcov文件，最后直接用编辑器查看“.gcov文件”的测试结果

对于有完整目录的实际程序来说，由于源代码分布于多个不同的目录，所以结束gcov命令的-o选项来达到查看测试文件的目的
首先通过makefile编译整个工程，然后执行可执行文件，这时，每个目录下都会有一个和原文件同名的“.gcov”文件
在makefile所在目录使用gocv命令（一定不要到.gcov所在目录执行）: gcov -o ./src ./src/srouce.gcda
这时会在当前目录生成source.c.gcov，直接用编辑器查看该文件即可。
（如果不在makefile目录下执行，而是在.gcda所在目录，则生成的.gcov文件中会找不到代码）
